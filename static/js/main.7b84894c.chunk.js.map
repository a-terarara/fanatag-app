{"version":3,"sources":["components/crawler_span_dropdown.js","components/tweet_crawler_brothers.js","service/twitter.js","App.js","index.js"],"names":["CrawlerSpanDropdown","props","spanList","setSpan","class","className","type","name","id","value","for","map","span","onClick","TweetCrawlerBrothers","searchText","setTimer","watch","clearInterval","fetchTweets","text","fetch","encodeURIComponent","then","r","json","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","backgroundColor","color","App","useState","tweets","setTweets","setSearchText","timer","setWatch","useEffect","setInterval","length","style","height","width","Grid","container","minHeight","maxHeight","position","item","xs","Typography","noWrap","fontSize","paddingLeft","src","image_url","borderRadius","component","fontWeight","margin","TextField","label","variant","disabled","onChange","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b84894c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function CrawlerSpanDropdown(props) {\n  const { spanList, setSpan } = props;\n\n  return (\n    <form>\n      <ul class=\"select\">\n        <li>\n          <input\n            className=\"select_close\"\n            type=\"radio\"\n            name=\"awesomeness\"\n            id=\"awesomeness-close\"\n            value=\"\"\n          />\n          <span className=\"select_label select_label-placeholder\">\n            クロール間隔\n          </span>\n        </li>\n\n        <li className=\"select_items\">\n          <input\n            className=\"select_expand\"\n            type=\"radio\"\n            name=\"awesomeness\"\n            id=\"awesomeness-opener\"\n          />\n          <label className=\"select_closeLabel\" for=\"awesomeness-close\"></label>\n          <ul className=\"select_options\">\n            {spanList.map(span => {\n              return (\n                <li className=\"select_option\">\n                  <input\n                    className=\"select_input\"\n                    type=\"radio\"\n                    name=\"awesomeness\"\n                    id={`awesomeness-${span}`}\n                    onClick={() => setSpan(span * 1000)}\n                  />\n                  <label className=\"select_label\" for={`awesomeness-${span}`}>\n                    {span}秒\n                  </label>\n                </li>\n              );\n            })}\n          </ul>\n          <label\n            className=\"select_expandLabel\"\n            for=\"awesomeness-opener\"\n          ></label>\n        </li>\n      </ul>\n    </form>\n  );\n}\n","import React from \"react\";\n\nexport default function TweetCrawlerBrothers(props) {\n  const { searchText, setTimer, watch } = props;\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td>\n            <button\n              className=\"btn-social-long-twitter\"\n              onClick={() => {\n                if (searchText) setTimer(1);\n              }}\n            >\n              <i className=\"fa fa-twitter\"></i> <span>ツイート取得</span>\n            </button>\n          </td>\n          <td></td>\n          <td>\n            <button\n              className=\"btn-social-long-twitter\"\n              onClick={() => {\n                setTimer(0);\n                clearInterval(watch);\n              }}\n            >\n              <span>取得キャンセル</span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","const baseUrl = \"https://asia-northeast1-fanatag-cdc8c.cloudfunctions.net/api/\";\n\nexport function fetchTweets(text) {\n  return fetch(`${baseUrl}search?text=${encodeURIComponent(text)}`).then(r =>\n    r.json()\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport CrawlerSpanDropdown from \"./components/crawler_span_dropdown\";\nimport TweetCrawlerBrothers from \"./components/tweet_crawler_brothers\";\nimport { fetchTweets } from \"./service/twitter\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"left\",\n    backgroundColor: \"transparent !important\",\n    color: \"#ffffff\"\n  }\n}));\n\nfunction App() {\n  const [tweets, setTweets] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [timer, setTimer] = useState(0);\n  const [watch, setWatch] = useState(\"\");\n  const [span, setSpan] = useState(6000);\n  const spanList = [6, 10, 15, 30];\n\n  useEffect(() => {\n    if (!searchText) return;\n    if (timer > 0) {\n      fetchTweets(searchText).then(json => {\n        setTweets([json[0]]);\n      });\n      setWatch(\n        setInterval(() => {\n          fetchTweets(searchText).then(json => {\n            setTweets([json[0]]);\n          });\n        }, span)\n      );\n    }\n  }, [timer]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <br />\n        <br />\n        {tweets.length > 0 ? (\n          <div\n            style={{\n              backgroundColor: \"#1da1f3\",\n              height: \"130px\",\n              width: \"500px\"\n            }}\n          >\n            <Grid container style={{ padding: \"2px\" }}>\n              <Grid\n                style={{\n                  minHeight: \"25px\",\n                  maxHeight: \"25px\",\n                  position: \"relative\"\n                }}\n                container\n                item\n                xs={12}\n              >\n                <Grid item xs={1} style={{ textAlign: \"center\" }}>\n                  <i className=\"fa fa-twitter\"></i>\n                </Grid>\n                <Grid item xs={6} />\n                <Grid item xs={5}>\n                  <Typography noWrap style={{ fontSize: \"80%\" }}>\n                    {searchText}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid\n                style={{\n                  minHeight: \"105px\",\n                  maxHeight: \"105px\",\n                  position: \"relative\",\n                  backgroundColor: \"#ffffff\",\n                  paddingLeft: \"2px\"\n                }}\n                item\n                xs={12}\n                spacing={3}\n              >\n                <img\n                  src={tweets[0].image_url}\n                  style={{ height: \"15px\", borderRadius: \"50%\" }}\n                />\n                <Typography\n                  component=\"span\"\n                  style={{\n                    paddingLeft: \"5px\",\n                    fontWeight: \"bold\",\n                    fontSize: \"100%\",\n                    color: \"#000000\"\n                  }}\n                >\n                  {tweets[0].name}\n                </Typography>\n                <Typography\n                  component=\"span\"\n                  style={{\n                    paddingLeft: \"5px\",\n                    fontSize: \"70%\",\n                    color: \"#888888\"\n                  }}\n                >\n                  {tweets[0].id}\n                </Typography>\n                <Typography\n                  style={{\n                    fontSize: \"80%\",\n                    color: \"#000000\",\n                    margin: \"4px\"\n                  }}\n                >\n                  {tweets[0].text}\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <br />\n        <br />\n        <TweetCrawlerBrothers\n          searchText={searchText}\n          setTimer={setTimer}\n          watch={watch}\n        />\n\n        <br />\n        <br />\n        <TextField\n          id=\"filled-basic\"\n          style={{ backgroundColor: \"#ffffff\" }}\n          label=\"クロールしたい文字列\"\n          variant=\"filled\"\n          value={searchText}\n          disabled={timer > 0}\n          onChange={e => setSearchText(e.target.value)}\n        />\n        <br />\n\n        {timer > 0 ? (\n          \"\"\n        ) : (\n          <CrawlerSpanDropdown spanList={spanList} setSpan={setSpan} />\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}